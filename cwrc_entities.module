<?php

/**
 * @file
 * Handles the creation/display of islandora:markupEditorCModel objects.
 */

global $base_url;


define('CWRC_OPEN_ANNOTATION_VIEW', 'view open annotations');
define('CWRC_OPEN_ANNOTATION_CREATE', 'create open annotations');

define('CWRC_ENTITY_VIEW', 'view entity');
define('CWRC_ENTITY_CREATE', 'create entity');


define('CWRC_OPEN_ANNOTATION_API_BASE', 'islandora/cwrc_entities/oa/');
define('CWRC_OPEN_ANNOTATION_API_HASTARGET', CWRC_OPEN_ANNOTATION_API_BASE . 'hasTarget/');
define('CWRC_OPEN_ANNOTATION_API_MINTURI', CWRC_OPEN_ANNOTATION_API_BASE . 'mintURI');
define('CWRC_OPEN_ANNOTATION_API', CWRC_OPEN_ANNOTATION_API_BASE . 'annotation');


//define('CWRC_ENTITES_API', 'services/ccm-api');
define('CWRC_ENTITES_API', 'islandora/cwrc_entities/v1');
define('CWRC_ENTITES_API_PLACE', CWRC_ENTITES_API . '/place');
define('CWRC_ENTITES_API_PLACE_SEARCH', CWRC_ENTITES_API . '/search/place');
define('CWRC_ENTITES_API_PERSON', CWRC_ENTITES_API . '/person');
define('CWRC_ENTITES_API_PERSON_SEARCH', CWRC_ENTITES_API. '/search/person');
define('CWRC_ENTITES_API_ORGANIZATION', CWRC_ENTITES_API . '/organization');
define('CWRC_ENTITES_API_ORGANIZATION_SEARCH', CWRC_ENTITES_API . '/search/organization');
define('CWRC_ENTITES_API_TITLE', CWRC_ENTITES_API . '/title');
define('CWRC_ENTITES_API_TITLE_SEARCH', CWRC_ENTITES_API . '/search/title');


define('CWRC_ENTITES_PERSON_DS_ID', 'PERSON');
define('CWRC_ENTITES_ORGANIZATION_DS_ID', 'ORGANIZATION');
define('CWRC_ENTITES_PLACE_DS_ID', 'PLACE');
define('CWRC_ENTITES_TITLE_DS_ID', 'MODS');

define('CWRC_ENTITES_REQUEST_CONTENT_PARAM', 'data');



/**
 * Implements hook_menu().
 */
function cwrc_entities_menu() {

  module_load_include('inc', 'islandora_workflow_rest', 'includes/basic_enum'); 

  // TODO: add infor to configuration page
  $config = array(
    'person' => array(
        'search' => array(
            'route' => CWRC_ENTITES_API_PERSON_SEARCH
            , 'title' => 'Person Entity Search'
            , 'cModel' => 'info:fedora/cwrc:person-entityCModel'
            , 'fields' => array('cwrc_entity_person_preferredForm_et','cwrc_entity_person_variantForm_et')
        )
        , 
        'entity' => array(
            'route' => CWRC_ENTITES_API_PERSON 
            , 'title' => 'Person Entity REST API'
            , 'cModel' => 'cwrc:person-entityCModel'
            , 'collectionPID' => 'cwrc:d3c004f1-2b3f-4e51-a679-4f1c0da4fe17'
            , 'ds_id' => CWRC_ENTITES_PERSON_DS_ID 
          )
      ),
    'organization' => array(
        'search' => array(
            'route' => CWRC_ENTITES_API_ORGANIZATION_SEARCH
            , 'title' => 'Organization Entity Search'
            , 'cModel' => 'info:fedora/cwrc:organization-entityCModel'
            , 'fields' => array('cwrc_entity_org_preferredForm_et','cwrc_entity_org_variantForm_et')
        )
        ,
        'entity' => array(
            'route' => CWRC_ENTITES_API_ORGANIZATION 
            , 'title' => 'Organization Entity REST API'
            , 'cModel' => 'cwrc:organization-entityCModel'
            , 'collectionPID' => 'cwrc:65c257ec-446c-479c-8695-6c015788413b'
            , 'ds_id' => CWRC_ENTITES_ORGANIZATION_DS_ID 
          )
      ),
    'place' => array(
        'search' => array(
            'route' => CWRC_ENTITES_API_PLACE_SEARCH
            , 'title' => 'Place Entity Search'
            , 'cModel' => 'info:fedora/cwrc:place-entityCModel'
            , 'fields' => array('cwrc_entity_place_preferredForm_et','cwrc_entity_place_variantForm_et')
        )
        ,
        'entity' => array(
            'route' => CWRC_ENTITES_API_PLACE 
            , 'title' => 'Place Entity REST API'
            , 'cModel' => 'cwrc:place-entityCModel'
            , 'collectionPID' => 'cwrc:20d46869-20a0-4d19-9ef6-1aacb3a1fba8'
            , 'ds_id' => CWRC_ENTITES_PLACE_DS_ID 
          )
      ),
    'title' => array(
        'search' => array(
            'route' => CWRC_ENTITES_API_TITLE_SEARCH
            , 'title' => 'Title Entity Search'
            , 'cModel' => 'info:fedora/cwrc:citationCModel'
            , 'fields' => array('cwrc_entity_title_uniformTitle_et','cwrc_entity_title_variantTitle_et')
        )
        ,
        'entity' => array(
            'route' => CWRC_ENTITES_API_TITLE 
            , 'title' => 'Title Entity REST API'
            , 'cModel' => 'cwrc:citationCModel'
            , 'collectionPID' => 'cwrc:bc53ab0d-3138-4791-a32a-5579fd067552'
            , 'ds_id' => CWRC_ENTITES_TITLE_DS_ID 
          )
      )
  );


  foreach ($config as $key => $value)
  {

    // search
    $items[ $value['search']['route'] ] = array(
      'title' => $value['search']['title']
      , 'page callback' => 'cwrc_entities_search'
      , 'page arguments' => array(
        $value['search']['cModel']
        , $value['search']['fields']
        )
      , 'type' => MENU_CALLBACK
      , 'file' => 'includes/callbacks_entities.inc'
      , 'access arguments' => array(CWRC_ENTITY_VIEW)
    );

    // Entity create
    $items[ $value['entity']['route'] ] = array(
      'title' => $value['entity']['title'],
      'type' => MENU_CALLBACK,
      'file' => 'includes/callbacks_entities.inc',
      'access arguments' => array(CWRC_ENTITY_VIEW),
      'page callback' => 'cwrc_entities_rest_api',
      'page arguments' => array(
        NULL
        , $value['entity']['cModel']
        , $value['entity']['collectionPID']
        , array(
            WorkflowConst::STAMP => 'cwrc:cre'
            , WorkflowConst::CATEGORY => 'created'
            , WorkflowConst::STATUS => 'c'
          )
        , '/xslt/entity_to_dc_TEI_support.xsl'
        , $value['entity']['ds_id']
        ),
      'type' => MENU_CALLBACK,
    );

    // Entity retrieve update view
    $items[ $value['entity']['route'] . '/%'] = array(
      'title' => $value['entity']['title'],
      'type' => MENU_CALLBACK,
      'file' => 'includes/callbacks_entities.inc',
      'access arguments' => array(CWRC_ENTITY_VIEW),
      'page callback' => 'cwrc_entities_rest_api',
      'page arguments' => array(
        4
        , NULL
        , NULL
        , array(
            WorkflowConst::STAMP => 'cwrc:evr'
            , WorkflowConst::CATEGORY => 'content_contribution'
            , WorkflowConst::STATUS => 'c'
          )
        , '/xslt/entity_to_dc_TEI_support.xsl'
        , $value['entity']['ds_id']
        ),
    );



  }



  // ===== ENTITIES
  // search
  //$items['islandora/cwrc_entities/search/person'] = array(
  /*
  $items[CWRC_ENTITES_API_PERSON_SEARCH] = array(
    'title' => 'Person Entity Search',
    'page callback' => 'cwrc_entities_search',
    'page arguments' => array(
      'info:fedora/cwrc:person-entityCModel'
      , array('cwrc_entity_person_preferredForm_et','cwrc_entity_person_variantForm_et')
      ),
    'type' => MENU_CALLBACK,
    'file' => 'includes/callbacks_entities.inc',
    'access arguments' => array(CWRC_ENTITY_VIEW),
  );
*/


/*
  // PERSON Entity
  //$items[ISLANDORA_CWRC_ENTITES_API_PERSON] = array(
  //$items['islandora/cwrc_entities/entity/person'] = array(
  $items[CWRC_ENTITES_API_PERSON] = array(
    'title' => 'Person Entity REST Creation',
    'type' => MENU_CALLBACK,
    'file' => 'includes/callbacks_entities.inc',
    'access arguments' => array(CWRC_ENTITY_VIEW),
    'page callback' => 'cwrc_entities_rest_api',
    'page arguments' => array(
      NULL
      , 'cwrc:person-entityCModel'
      , 'cwrc:d3c004f1-2b3f-4e51-a679-4f1c0da4fe17'
      , array(
          WorkflowConst::STAMP => 'cwrc:cre'
          , WorkflowConst::CATEGORY => 'created'
          , WorkflowConst::STATUS => 'c'
        )
      , '/xslt/entity_to_dc_TEI_support.xsl'
      , CWRC_ENTITES_PERSON_DS_ID
      ),
    'type' => MENU_CALLBACK,
  );

 //$items[ISLANDORA_CWRC_ENTITES_API_PERSON . '%'] = array(
//  $items['islandora/cwrc_entities/entity/person/%'] = array(
  $items[CWRC_ENTITES_API_PERSON . '/%'] = array(
    'title' => 'Person Entity REST endpoint',
    'type' => MENU_CALLBACK,
    'file' => 'includes/callbacks_entities.inc',
    'access arguments' => array(CWRC_ENTITY_VIEW),
    'page callback' => 'cwrc_entities_rest_api',
    'page arguments' => array(
      3
      , NULL
      , NULL
      , array(
          WorkflowConst::STAMP => 'cwrc:evr'
          , WorkflowConst::CATEGORY => 'content_contribution'
          , WorkflowConst::STATUS => 'c'
        )
      , '/xslt/entity_to_dc_TEI_support.xsl'
      , CWRC_ENTITES_PERSON_DS_ID
      ),
  );
*/


    // OA Annotatation API

  //$items['islandora/markupeditor/oa/mintURI'] = array(
  $items[CWRC_OPEN_ANNOTATION_API_MINTURI] = array(
    'title' => 'Open Annotation URI minting',
    'page callback' => 'cwrc_entities_oa_mintURI',
    'type' => MENU_CALLBACK,
    'file' => 'includes/callbacks_oa.inc',
    'access arguments' => array(CWRC_OPEN_ANNOTATION_CREATE),
  );

  $items[CWRC_OPEN_ANNOTATION_API_MINTURI . '/%'] = array(
    'title' => 'Open Annotation URI minting',
    'page callback' => 'cwrc_entities_oa_mintURI',
    'page arguments' => array(4),
    'type' => MENU_CALLBACK,
    'file' => 'includes/callbacks_oa.inc',
    'access arguments' => array(CWRC_OPEN_ANNOTATION_CREATE),
  );

  $items[CWRC_OPEN_ANNOTATION_API_HASTARGET . '%'] = array(
    'title' => 'Open Annotation hasTarget Query',
    'page callback' => 'cwrc_entities_oa_hasTarget',
    'page arguments' => array(4),
    'type' => MENU_CALLBACK,
    'file' => 'includes/callbacks_oa.inc',
    'access arguments' => array(CWRC_OPEN_ANNOTATION_VIEW),
  );

  $items[CWRC_OPEN_ANNOTATION_API] = array(
    'title' => 'Open Annotation REST endpoint',
    'page callback' => 'cwrc_entities_oa_annotation',
    'type' => MENU_CALLBACK,
    'file' => 'includes/callbacks_oa.inc',
    'access arguments' => array(CWRC_OPEN_ANNOTATION_CREATE),
  );
  $items[CWRC_OPEN_ANNOTATION_API . '%'] = array(
    'title' => 'Open Annotation REST endpoint',
    'page callback' => 'cwrc_entities_oa_annotation',
    'page arguments' => array(4),
    'type' => MENU_CALLBACK,
    'file' => 'includes/callbacks_oa.inc',
    'access arguments' => array(CWRC_OPEN_ANNOTATION_CREATE),
  );


  $items['admin/islandora/cwrc_entities_collections'] = array(
    'title' => 'Entity Collections',
    'description' => 'Configure settings Entity Collections',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cwrc_entities_admin_form'),
    'access arguments' => array('administer site configuration'),
  );
  
  
  return $items;
}


/**
 * Implements hook_permission().
 */
function cwrc_entities_permission() {
  return array(
    CWRC_OPEN_ANNOTATION_VIEW => array(
      'title' => t('View open annotations'),
      'description' => t('View open annotations.'),
    ),
    CWRC_OPEN_ANNOTATION_CREATE => array(
      'title' => t('Create open annotations'),
      'description' => t('Create open Annotations'),
    ),
    CWRC_ENTITY_VIEW => array(
      'title' => t('View entity'),
      'description' => t('View entity'),
    ),
    CWRC_ENTITY_CREATE => array(
      'title' => t('Create entity'),
      'description' => t('Create entity'),
    ),
  );
}


/**
 *  Implements hook_form().
 */
function cwrc_entities_admin_form($form, &$form_state) {

	$form = array();
	$form['collection_container'] = array(
		'#type' => 'container',
		
	);
	
	$form['collection_container']['allowed_entity_collections'] = array(
		'#id' => 'entity_collection_autocomplete',
		'#type' => 'textfield',
		'#maxlength' => 180,
		'#attributes' => array(
			'class' => array(
				'autocomplete'),
			),
		'#title' => 'Allowed Entity Collections',
		'#autocomplete_path' => 'islandora_object_field/autocomplete',
		'#ajax["event"]' => 'blur',
		'#default_value' => '',
	);
	// Add the javascript.
  if (function_exists('drupal_get_path')) {
    $form['#attached'] = array(
		'library' => array(
		  array('system', 'ui.dialog'),
		),
		'js' => array(
		  drupal_add_js('misc/autocomplete.js'),
		),
	);
  }
  
	  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Change'),
  );
  
  return $form;
	
}
